//
//  함수형 프로그래밍.swift
//  Interview
//
//  Created by 1 on 2022/12/01.
//

import Foundation
/*
 
 함수형 프로그래밍이란?
 -프로그램이 상태의 변화 ㅇ벗이 데이터 처리를 수학적 함수 계산으로 취급하고자 하는 프로그래밍
 
 -값이나 상태의 변화보다는 '함수 자체의 응용을 중요'하게 여긴다.
 
 [-크도 이해와 실행 결과의 관점에서, 순수하게 함수에 전달된 인자 값만 결과에 영향을 주기 때문에 '상태 값을 갖기 않고 순수하게 함수만으로 동작
 - 어떤 상황에서 프로그램을실행하더라도 일정하게 같은 결과를 도출 할 수 있다.]
 
 [ - 프로그램 동작 과정에서 상태(값)가 변하지 않으면 함수 호출이 각각 상호 간섭 없이 실행되므로 병렬처리를 할 때 부작용이 거의 없다는 장점이 있다.
 - 필요한만큼 함수를 나누어 처리할 수 있도록 스케일업 할 수 있기 때문에 대규모 병렬 처리에 큰 강점을 가진다.]
 
 함수형 프로그래밍 안에서는 함수가 일급 객체이므로 함수를 전달인자 또는 반환값으로 사용할 수 있습니다.
 
 
 함수는 -> 일급 시민 이다       이것이 일급객체???
 변수나 상수에 할당할 수 있는가
 함수의 전달인자로 전달할 수 있는가
 함수의 반환값이 될 수 있는가
 
 
 함수형 프로그래밍의 장점
 - 여러가지 연산 처리 작업이 동시에 일어나는 프로그램을 짜기 쉽다.
 - 멀티코어 혹은 여러 연산 프로세서를 사용하는 시스템에서 효율적인 프로그램을 만들기 쉽다.
 - 상태변화에 따른 부작용에서 자유로워지므로 순수하게 기능 구현에 초점을 맞춰 설계가 가능하다.
 
 적재적소에 객체지향과 함수형 프로그래밍을 섞어 프로그래밍을 한다면 필요한 기능에 맞ㅈ게 최적의 성능을 발휘할 수 있고, 생산성도 극대화 할 수 있는
 프로그램을 만들 수 있다.
 
 
                   명령형 프로그래밍           함수형 프로그래밍
프로그래머의 초점      작업 수행 알고르즘        원하는 정보 필요한 변환
                  상태의 변경 추적
 상태 변경           중요함                       없음
 실행 순서           중요함                     중요도가 낮음
 주요 흐름 제어      제어문(반복문,조건문 등)     순환(재귀)함수 호출 등의 함수 호출로 제어
                  함수(메소드)호출
 주요 조작 단위     클래스나 구조체의 인스턴스          함수
 
 */
